<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.lang.Comparable"/>
    <fullyQualifiedTypeName name="org.springframework.context.support.ClassPathXmlApplicationContext"/>
    <fullyQualifiedTypeName name="org.springframework.context.ApplicationContext"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Qualifier"/>
    <fullyQualifiedTypeName name="com.npci.service.EmployeeService"/>
    <fullyQualifiedTypeName name="com.npci.dao.EmployeeDao"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.npci.springws.service.ProfileService"/>
    <fullyQualifiedTypeName name="com.npci.springws.beans.Profile"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="com.npci.springws.exceptions.ProfileNotFoundException"/>
    <fullyQualifiedTypeName name="java.lang.ClassNotFoundException"/>
    <fullyQualifiedTypeName name="java.sql.SQLException"/>
    <fullyQualifiedTypeName name="org.postgresql.Driver"/>
    <fullyQualifiedTypeName name="java.sql.Connection"/>
    <fullyQualifiedTypeName name="java.sql.DriverManager"/>
    <fullyQualifiedTypeName name="java.sql.Date"/>
    <fullyQualifiedTypeName name="com.npci.beans.Profile"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
    <fullyQualifiedTypeName name="java.sql.ResultSet"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.npci.profiledbapp.dao.ProfileDao"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.npci.profiledbapp.service.ProfileService"/>
    <fullyQualifiedTypeName name="com.npci.profiledbapp.beans.Profile"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Modifying"/>
    <fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.npci.profiledbapp.exceptions.ProfileNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="jakarta.persistence.OneToOne"/>
    <fullyQualifiedTypeName name="jakarta.persistence.OneToMany"/>
    <fullyQualifiedTypeName name="jakarta.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
</qualifiedTypeNameHistroy>
